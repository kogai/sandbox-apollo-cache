{"dependencies":[{"name":"apollo-client","loc":{"line":4,"column":12}},{"name":"graphql-tag","loc":{"line":5,"column":20}}],"generated":{"js":"const {\n  ApolloClient,\n  createNetworkInterface\n} = require('apollo-client');\nconst gql = require('graphql-tag');\n\nconst typeDefs = `\n  type Query {\n    books: [Book!]!\n    author: Author\n  }\n\n  type Book { title: String!, author: String! }\n  type Author {\n    id: String!\n    name: String!\n    books: [Book!]!\n  }\n`;\n\nconst client = new ApolloClient({\n  networkInterface: createNetworkInterface({\n    uri: 'http://localhost:3000/graphql',\n  }),\n});\n\nconst query = gql `\nquery Q {\n  author {\n    id\n    author {\n      name\n      books {\n        title\n        author\n      }\n    }\n  }\n}\n`;\n\nclient.query({\n    query,\n  })\n  .then(data => {\n    console.log(data.data);\n\n    client.query({\n        query,\n      })\n      .then(data => console.log(data.data))\n  });\n","map":{"mappings":[{"source":"client.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"client.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"client.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"client.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"client.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"client.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"client.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"client.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"client.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"client.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"client.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"client.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"client.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"client.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"client.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"client.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"client.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"client.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"client.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"client.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"client.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"client.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"client.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"client.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"client.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"client.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"client.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"client.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"client.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"client.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"client.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"client.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"client.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"client.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"client.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"client.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"client.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"client.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"client.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"client.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"client.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"client.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"client.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"client.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"client.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"client.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"client.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"client.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"client.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"client.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"client.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"client.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"client.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}}],"sources":{"client.js":"const {\n  ApolloClient,\n  createNetworkInterface\n} = require('apollo-client');\nconst gql = require('graphql-tag');\n\nconst typeDefs = `\n  type Query {\n    books: [Book!]!\n    author: Author\n  }\n\n  type Book { title: String!, author: String! }\n  type Author {\n    id: String!\n    name: String!\n    books: [Book!]!\n  }\n`;\n\nconst client = new ApolloClient({\n  networkInterface: createNetworkInterface({\n    uri: 'http://localhost:3000/graphql',\n  }),\n});\n\nconst query = gql `\nquery Q {\n  author {\n    id\n    author {\n      name\n      books {\n        title\n        author\n      }\n    }\n  }\n}\n`;\n\nclient.query({\n    query,\n  })\n  .then(data => {\n    console.log(data.data);\n\n    client.query({\n        query,\n      })\n      .then(data => console.log(data.data))\n  });\n"},"lineCount":53}},"hash":"5231ce56f7352eeaa1d6bb34d297a518","cacheData":{"env":{}}}